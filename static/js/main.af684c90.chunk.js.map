{"version":3,"sources":["Header.js","SearchForm.js","BookCard.js","BookList.js","Books.js","App.js","index.js"],"names":["Header","className","Search","props","onSubmit","searchBook","type","onChange","handleSearch","placeholder","alt","required","defaultValue","handleSort","disabled","value","BookCard","href","infolink","target","src","image","title","author","published","substring","BookList","books","map","count","volumeInfo","imageLinks","thumbnail","authors","publishedDate","infoLink","Books","e","preventDefault","superagent","get","query","q","state","searchField","then","data","requestData","replaceData","setState","sort","body","items","book","hasOwnProperty","sortedBooks","this","a","b","parseInt","localeCompare","handleSubmit","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAWeA,EATA,WAEX,OACE,qBAAKC,UAAU,SAAf,SACI,uECgBKC,EApBA,SAACC,GACZ,OACI,qBAAKF,UAAU,SAAf,SACI,sBAAMG,SAAUD,EAAME,WAAtB,SACG,sBAAKJ,UAAU,aAAf,UACA,uBAAOK,KAAK,OAAOC,SAAUJ,EAAMK,aAAcC,YAAY,cAAcC,IAAI,oBAAoBC,UAAQ,IAC3G,wBAAQL,KAAK,SAASI,IAAI,gBAA1B,oBACA,yBAAQE,aAAa,OAAOL,SAAUJ,EAAMU,WAAYH,IAAI,iCAA5D,UACI,wBAAQI,UAAQ,EAACC,MAAM,OAAvB,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,4BCSJC,EArBE,SAACb,GACd,OACI,qBAAKF,UAAU,YAAf,SACE,oBAAGgB,KAAMd,EAAMe,SAAUC,OAAO,SAAST,IAAI,qCAA7C,UACE,qBAAKU,IAAKjB,EAAMkB,MAAOX,IAAI,yBACzB,sBAAKT,UAAU,OAAf,UACE,8BAAG,uCAAH,IAAkBE,EAAMmB,SACxB,8BAAG,wCAAH,IAAmBnB,EAAMoB,UACzB,8BAAG,iDAEyB,SAApBpB,EAAMqB,UACF,gBACArB,EAAMqB,UAAUC,UAAU,EAAE,eCUzCC,EArBE,SAACvB,GACd,OACI,qBAAKF,UAAU,YAAf,SACG,qBAAKA,UAAU,YAAf,SAEIE,EAAMwB,MAAMC,KAAI,SAACD,EAAOE,GACvB,OAAO,cAAC,EAAD,CAEIR,MAAOM,EAAMG,WAAWC,WAAWC,UACnCV,MAAOK,EAAMG,WAAWR,MACxBC,OAAQI,EAAMG,WAAWG,QACzBT,UAAWG,EAAMG,WAAWI,cAC5BhB,SAAUS,EAAMG,WAAWK,UALtBN,W,iBCiEjBO,E,kDApEb,WAAYjC,GAAO,IAAD,8BACf,cAAMA,IAQTE,WAAa,SAACgC,GACZA,EAAEC,iBACFC,IACGC,IAAI,+CACJC,MAAM,CAACC,EAAG,EAAKC,MAAMC,cACrBC,MAAK,SAACC,GACJ,IAAMC,EAAc,EAAKC,YAAYF,GACrC,EAAKG,SAAS,CAAEtB,MAAOoB,QAhBZ,EAoBlBvC,aAAe,SAAC6B,GACd,EAAKY,SAAS,CAAEL,YAAaP,EAAElB,OAAOJ,SArBtB,EAwBlBF,WAAa,SAACwB,GACZ,EAAKY,SAAS,CAAEC,KAAMb,EAAElB,OAAOJ,SAzBf,EA4BlBiC,YAAc,SAACF,GAYb,OAXqBA,EAAKK,KAAKC,MAAMxB,KAAI,SAACyB,GAQvC,OAPuD,IAApDA,EAAKvB,WAAWwB,eAAe,mBAC/BD,EAAKvB,WAAL,cAAmC,SAEc,IAAjDuB,EAAKvB,WAAWwB,eAAe,gBAC/BD,EAAKvB,WAAL,WAAgC,CAAEE,UAAW,+EAGzCqB,MAnCT,EAAKV,MAAQ,CACXhB,MAAO,GACPiB,YAAa,GACbM,KAAM,IALO,E,0CA2ClB,WAAS,IAAD,OACDK,EAAcC,KAAKb,MAAMhB,MAAMuB,MAAK,SAACO,EAAGC,GAC3C,MAAuB,WAApB,EAAKf,MAAMO,KACJS,SAASD,EAAE5B,WAAWI,cAAcT,UAAU,EAAE,IAAMkC,SAASF,EAAE3B,WAAWI,cAAcT,UAAU,EAAE,IAEpF,WAApB,EAAKkB,MAAMO,KACTS,SAASF,EAAE3B,WAAWI,cAAcT,UAAU,EAAE,IAAMkC,SAASD,EAAE5B,WAAWI,cAAcT,UAAU,EAAE,IAEpF,QAApB,EAAKkB,MAAMO,KACTO,EAAE3B,WAAWR,MAAMsC,cAAcF,EAAE5B,WAAWR,OAE5B,QAApB,EAAKqB,MAAMO,KACTQ,EAAE5B,WAAWR,MAAMsC,cAAcH,EAAE3B,WAAWR,YADnD,KAKP,OACE,gCACG,cAAC,EAAD,CAAQjB,WAAYmD,KAAKnD,WAAYG,aAAcgD,KAAKhD,aAAcK,WAAY2C,KAAK3C,WAAYgD,aAAcL,KAAKK,eACtH,cAAC,EAAD,CAAUlC,MAAO4B,W,GAhENO,aCWLC,E,4JAVb,WACE,OACE,sBAAK9D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GANU6D,aCClBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.af684c90.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n      <div className=\"Header\">\r\n          <h1>Book Search App - Google Books API</h1>\r\n      </div >\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nconst Search = (props) =>{   \r\n    return (\r\n        <div className=\"Search\">\r\n            <form onSubmit={props.searchBook}>\r\n               <div className=\"InputGroup\">\r\n               <input type=\"text\" onChange={props.handleSearch} placeholder=\"Enter Title\" alt=\"Book search input\" required/>\r\n               <button type=\"submit\" alt=\"Submit button\">Search</button >\r\n               <select defaultValue=\"Sort\" onChange={props.handleSort} alt=\"Sort button for date and title\">\r\n                   <option disabled value=\"Sort\">Sort</option>\r\n                   <option value=\"Newest\">Newest</option>\r\n                   <option value=\"Oldest\">Oldest</option>\r\n                   <option value=\"A-Z\">A-Z</option>\r\n                   <option value=\"Z-A\">Z-A</option>\r\n               </select>\r\n               </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst BookCard = (props) => {\r\n    return (\r\n        <div className=\"book-card\">\r\n          <a href={props.infolink} target=\"_blank\" alt=\"Redirect link to Google Play Books\">\r\n            <img src={props.image} alt=\"Book thumbnail cover\"/>  \r\n              <div className=\"desc\">                 \r\n                <p><b>Title:</b> {props.title}</p>           \r\n                <p><b>Author:</b> {props.author}</p>  \r\n                <p><b>Published Date: </b>    \r\n                    {\r\n                        props.published === '0000'  \r\n                          ? 'Not Available' \r\n                          : props.published.substring(0,4)\r\n                     }\r\n                </p>\r\n              </div>\r\n          </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookCard\r\n","import React from 'react';\r\nimport BookCard from './BookCard';\r\n\r\nconst BookList = (props) => {\r\n    return (\r\n        <div className=\"BookGroup\">\r\n           <div className=\"book-list\">   \r\n           { \r\n               props.books.map((books, count) => {\r\n                return <BookCard\r\n                           key={count} \r\n                           image={books.volumeInfo.imageLinks.thumbnail}\r\n                           title={books.volumeInfo.title}\r\n                           author={books.volumeInfo.authors}\r\n                           published={books.volumeInfo.publishedDate}\r\n                           infolink={books.volumeInfo.infoLink}\r\n                       />\r\n               })\r\n           }\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList","import { Component } from 'react';\r\nimport Search from './SearchForm';\r\nimport BookList from './BookList';\r\nimport superagent from 'superagent';\r\n\r\nclass Books extends Component{\r\n\r\n  constructor(props){    \r\n     super(props);\r\n     this.state = {\r\n       books: [],\r\n       searchField: '',\r\n       sort: ''\r\n     }\r\n  }\r\n\r\n  searchBook = (e) => {      \r\n    e.preventDefault();          \r\n    superagent\r\n      .get(\"https://www.googleapis.com/books/v1/volumes\")\r\n      .query({q: this.state.searchField })\r\n      .then((data) => {\r\n         const requestData = this.replaceData(data)\r\n         this.setState({ books: requestData })\r\n      })\r\n  }\r\n\r\n  handleSearch = (e) => {          \r\n    this.setState({ searchField: e.target.value }) \r\n  } \r\n                  \r\n  handleSort = (e) => {\r\n    this.setState({ sort: e.target.value })\r\n  }\r\n\r\n  replaceData = (data) => {    \r\n    const replacedData = data.body.items.map((book) => {\r\n       if(book.volumeInfo.hasOwnProperty('publishedDate') === false) {\r\n          book.volumeInfo['publishedDate'] = '0000' ;\r\n       }                 \r\n       if(book.volumeInfo.hasOwnProperty('imageLinks') === false) {\r\n          book.volumeInfo['imageLinks'] = { thumbnail: 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg' };\r\n       }\r\n       \r\n       return book;\r\n     })\r\n\r\n    return replacedData;\r\n  }\r\n\r\n  render(){   \r\n   const sortedBooks = this.state.books.sort((a, b) => {\r\n      if(this.state.sort === 'Newest'){\r\n         return parseInt(b.volumeInfo.publishedDate.substring(0,4)) - parseInt(a.volumeInfo.publishedDate.substring(0,4));\r\n      }\r\n      else if(this.state.sort === 'Oldest'){\r\n         return parseInt(a.volumeInfo.publishedDate.substring(0,4)) - parseInt(b.volumeInfo.publishedDate.substring(0,4));\r\n      }\r\n      else if(this.state.sort === 'A-Z'){\r\n         return a.volumeInfo.title.localeCompare(b.volumeInfo.title);\r\n      }\r\n      else if(this.state.sort === 'Z-A'){\r\n         return b.volumeInfo.title.localeCompare(a.volumeInfo.title);\r\n      }\r\n   })\r\n\r\n    return (  \r\n      <div>\r\n         <Search searchBook={this.searchBook} handleSearch={this.handleSearch} handleSort={this.handleSort} handleSubmit={this.handleSubmit}/>    \r\n         <BookList books={sortedBooks}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Books\r\n","import { Component } from 'react';\nimport Header from './Header';\nimport Books from './Books';\n\nclass App extends Component{\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        <Books />\n      </div>\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}